import { AnimatePresence, motion } from 'framer-motion';
import type { FC } from 'react';
import { useRef, useState } from 'react';
import { AiFillCaretDown, AiFillCaretUp } from 'react-icons/ai';
import { MdDone } from 'react-icons/md';
import { TiTick } from 'react-icons/ti';
import useHandleClose from '../../../../hooks/useHandleClose';

const GroupByOptions: FC = () => {
  const [showOptions, setShowOptions] = useState<boolean>(false);
  const [groupByOptions, setGroupByOptions] = useState<
    'week' | 'day' | 'month'
  >('week');
  const optionRef = useRef<HTMLDivElement>(null);

  useHandleClose<HTMLDivElement | null>(() => {
    setShowOptions(false);
  }, optionRef);

  const OptionButton: FC<{ option: 'week' | 'day' | 'month' }> = ({
    option,
  }) => {
    return (
      <div
        onClick={() => {
          setGroupByOptions(option);
        }}
        className={`cursor-pointer p-1 px-2 rounded-md ${
          groupByOptions === option
            ? 'bg-blue-400 text-gray-50 shadow-xl shadow-blue-400/30'
            : 'hover:bg-blue-400 hover:text-gray-50'
        } flex items-center justify-between mb-0.5`}
      >
        <span className="capitalize">{option}</span>
        {groupByOptions === option ? <MdDone /> : ''}
      </div>
    );
  };

  return (
    <div className="relative z-10" ref={optionRef}>
      <small className="text-gray-50 mb-1">Group By</small>
      <button
        className={`px-3 py-1 border-gray-200 border text-gray-50 
        flex items-center w-32 ${
          showOptions
            ? 'rounded-t-md bg-gray-300/40'
            : 'rounded-md hover:bg-gray-50 hover:text-gray-800'
        }`}
        onClick={() => setShowOptions(!showOptions)}
      >
        <TiTick className="bg-blue-400  rounded-full mr-2" />
        <span className="mr-2 capitalize">{groupByOptions}</span>
        <div className="ml-auto">
          <motion.span
            animate={showOptions ? { display: 'inherit' } : { display: 'none' }}
          >
            <AiFillCaretUp />
          </motion.span>
          <motion.span
            animate={
              !showOptions ? { display: 'inherit' } : { display: 'none' }
            }
          >
            <AiFillCaretDown />
          </motion.span>
        </div>
      </button>
      <AnimatePresence exitBeforeEnter>
        {showOptions ? (
          <motion.div
            animate={{ opacity: 1 }}
            initial={{ opacity: 0 }}
            exit={{ opacity: 0 }}
            className="absolute bg-gray-100 text-gray-800 p-1 w-full rounded-md rounded-t-none"
          >
            <OptionButton option="day" />
            <OptionButton option="week" />
            <OptionButton option="month" />
          </motion.div>
        ) : (
          ''
        )}
      </AnimatePresence>
    </div>
  );
};

export default GroupByOptions;
