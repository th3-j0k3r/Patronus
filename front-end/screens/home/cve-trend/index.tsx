import type { FC } from 'react';
import { useEffect, useState } from 'react';
import useSWR from 'swr';
import type { CommonVulnerabilitiesandExposuresTrendResponse } from '../../../api-routes/types';
import { CVETrendLocalStarageName } from '../../../configs';
import {
  compareTimeDifference,
  convertToInternationalNumericalSystem,
  toLocalString,
} from '../../../utils/helpers';
import { _localStorage } from '../../../utils/web.apis';
import CVSSView from './cvss-view';
import EPSSView from './epss-view';
import { checkCVEExits } from './helpers';
import ProductView from './product-view';

const CVEView: FC = () => {
  const fetcher = (url: string) => fetch(url).then((res) => res.json());
  const [shouldRequest, setShouldRequest] = useState<boolean>(false);
  const [CVEIds, setCVEids] = useState<string[]>([]);

  const [tableData, setTableData] =
    useState<CommonVulnerabilitiesandExposuresTrendResponse>();

  const { isValidating, data } =
    useSWR<CommonVulnerabilitiesandExposuresTrendResponse>(
      shouldRequest ? 'https://cvetrends.com/api/cves/24hrs' : '',
      fetcher,
    );

  useEffect(() => {
    let isCancelled = false;
    const localStorage = _localStorage();

    if (!isCancelled && localStorage) {
      const data = localStorage.getItem(CVETrendLocalStarageName);
      if (!data) {
        setShouldRequest(true);
        return;
      }

      const parsedData = JSON.parse(
        data,
      ) as CommonVulnerabilitiesandExposuresTrendResponse & {
        fetchedAt: number;
      };

      if (compareTimeDifference(parsedData.fetchedAt)) {
        setShouldRequest(true);
      } else {
        setTableData(parsedData);
      }
    }

    return () => {
      isCancelled = true;
    };
  }, []);

  useEffect(() => {
    let isCancelled = false;

    if (!isCancelled) {
      const cveIds = tableData?.data?.map((each) => each.cve)!;
      checkCVEExits(cveIds).then((ids) => {
        setCVEids(ids);
      });
    }

    return () => {
      isCancelled = true;
    };
  }, [tableData]);

  useEffect(() => {
    let isCancelled = false;
    const localStorage = _localStorage();

    if (!isCancelled && localStorage && data) {
      setTableData(data);

      localStorage.setItem(
        CVETrendLocalStarageName,
        JSON.stringify({ fetchedAt: new Date().getTime(), ...data }),
      );
    }

    return () => {
      isCancelled = true;
    };
  }, [data]);

  if (isValidating) {
    return null;
  }

  return (
    <div className="grid  grid-cols-1 my-4 ">
      <div className="chart-card  mt-4 pb-0">
        <div className="w-full  text-gray-50 ">
          <h3 className="text-white text-lg cut-text-one mb-3">
            Common Vulnerabilities and Exposures Trend
          </h3>
          {!CVEIds.length ? (
            <div>
              <small>
                No matching actively exploited {"CVE's"} that are matching with
                CVEtrends
              </small>
            </div>
          ) : (
            <div>
              <div className="overflow-x-auto">
                <div className="inline-block min-w-full">
                  <table className="min-w-full leading-normal">
                    <thead>
                      <tr>
                        <th className="px-2 py-3 bg-teal-700/50  border-y border-gray-200 text-left text-xs font-semibold uppercase">
                          #
                        </th>
                        <th className="px-2 py-3 bg-teal-700/50  border-y  border-gray-200 text-left text-xs font-semibold uppercase">
                          CVE
                        </th>
                        <th className="px-2 py-3 bg-teal-700/50  border-y  border-gray-200 text-left text-xs font-semibold uppercase">
                          Audience
                        </th>
                        <th className="px-2 py-3 bg-teal-700/50 border-y  border-gray-200  text-left text-xs font-semibold uppercase">
                          Tweets
                        </th>
                        <th className="px-2 py-3 bg-teal-700/50 border-y  border-gray-200  text-left text-xs font-semibold uppercase">
                          ReTweets
                        </th>
                        <th className="px-2 py-3 bg-teal-700/50 border-y  border-gray-200  text-left text-xs font-semibold uppercase">
                          CVSS <small>v3</small>
                        </th>
                        <th className="px-2 py-3 bg-teal-700/50  border-y border-gray-200 text-left text-xs font-semibold uppercase">
                          EPSS
                        </th>
                        <th className="px-2 py-3 bg-teal-700/50  border-y border-gray-200 text-left text-xs font-semibold uppercase">
                          Published
                        </th>
                        <th className="px-2 py-3 bg-teal-700/50  border-y border-gray-200 text-left text-xs font-semibold uppercase">
                          Modified
                        </th>
                        <th className="px-2 py-3 bg-teal-700/50  border-y border-gray-200 text-left text-xs font-semibold uppercase">
                          Vendor
                        </th>
                        <th className="px-2 py-3 bg-teal-700/50  border-y border-gray-200 text-left text-xs font-semibold uppercase">
                          Product
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      {tableData?.data
                        ?.filter((each) => CVEIds.includes(each.cve))
                        ?.map((trend, idx) => {
                          return (
                            <tr key={idx}>
                              <td className="px-2 py-3 border-b border-gray-200  text-sm">
                                <p>{idx + 1}</p>
                              </td>
                              <td className="px-2 py-3 border-b border-gray-200  text-sm">
                                <p className="whitespace-nowrap">{trend.cve}</p>
                              </td>
                              <td className="px-2 py-3 border-b border-gray-200  text-sm">
                                <p>
                                  {convertToInternationalNumericalSystem(
                                    trend.audience_size,
                                  )}
                                </p>
                              </td>
                              <td className="px-2 py-3 border-b border-gray-200  text-sm">
                                <p>{trend.num_tweets}</p>
                              </td>
                              <td className="px-2 py-3 border-b border-gray-200  text-sm">
                                <p>{trend.num_retweets}</p>
                              </td>

                              <CVSSView
                                score={trend.cvssv3_base_score || 0}
                                severity={trend.cvssv3_base_severity || ''}
                              />
                              <EPSSView score={trend.epss_score || ''} />

                              <td className="px-2 py-3 border-b border-gray-200  text-sm">
                                <p className="whitespace-nowrap">
                                  {toLocalString(
                                    trend.publishedDate ||
                                      new Date().toString(),
                                  )}
                                </p>
                              </td>
                              <td className="px-2 py-3 border-b border-gray-200  text-sm">
                                <p className="whitespace-nowrap">
                                  {toLocalString(
                                    trend.lastModifiedDate ||
                                      new Date().toString(),
                                  )}
                                </p>
                              </td>

                              <td className="px-2 py-3 border-b border-gray-200  text-sm">
                                <p>
                                  {trend.vendors
                                    ?.map((vendor) => vendor?.vendor)
                                    .join(', ')}
                                </p>
                              </td>

                              <ProductView vendors={trend.vendors} />
                            </tr>
                          );
                        })}
                    </tbody>
                  </table>
                </div>
              </div>
              <small className="text-right block text-gray-50/70">
                Data Source :{' '}
                <a
                  href="https://cvetrends.com"
                  className="hover:text-blue-400"
                  target="_blank"
                  rel="noreferrer"
                >
                  https://cvetrends.com
                </a>
              </small>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default CVEView;
